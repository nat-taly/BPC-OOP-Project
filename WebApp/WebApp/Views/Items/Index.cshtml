@model PaginatedList<WebApp.Models.Item>


@{
    ViewData["Title"] = "Items";
}

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>

        <tr>
            <th>
                Name
            </th>
            <th>
                Count
            </th>
            <th>
                Value
            </th>
            <th>
                Type
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Count)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value) @Html.DisplayFor(modelItem => item.Unit.UnitName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type.TypeName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.NextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex-1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex+1)"
   class="btn btn-default @nextDisabled">
    Next
</a>

